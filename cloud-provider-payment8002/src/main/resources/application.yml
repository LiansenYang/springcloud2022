server:
  port: 8002
spring:
  application:
    #提供相同的服务的微服务的名字应该是一样的，这样客户端才可以获取到http://CLOUD-PAYMENT-SERVICE....
    name: cloud-payment-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db2019?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    username: root
    password: root
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.yangls.springcloud.entities


eureka:
  client:
    #表示是否将自己注册进EurekaServer默认为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册消息，默认为true，单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #集群版
#      defaultZone: http://eureka7001:7001/eureka/,http://eureka7002:7002/eureka/
      #单机版
#      defaultZone: http://localhost:7001/eureka/
      defaultZone: http://eureka7003.com:7003/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7001.com:7001/eureka/
  instance:
    #配置到eureka 的服务名
    instance-id: payment8002
    #是否显示服务的所在主机的ip地址
    prefer-ip-address: true